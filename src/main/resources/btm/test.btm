RULE trace thread start
CLASS java.lang.Thread
METHOD start()
IF true
DO traceln("*** start for thread: "+ $0.getName())
ENDRULE


RULE trace invocation in
CLASS ^com.etz.replay.unit.targets.HelloWordTestServiceImpl
METHOD doBusiness
AT ENTRY
BIND invocation:com.etz.replay.unit.context.Invocation=new com.etz.replay.unit.context.Invocation();
        _args:Object[]=java.util.stream.Stream.of($*).skip(1).toArray()
IF true
DO   traceln("invocation in");
    invocation.setMethod("doBusiness");
    com.etz.replay.unit.context.InvocationContext.getCurrent().push(invocation,_args);
ENDRULE


RULE trace invocation out
CLASS ^com.etz.replay.unit.targets.HelloWordTestServiceImpl
METHOD doBusiness
AT EXIT
BIND   _args:Object[]=java.util.stream.Stream.of($*).skip(1).toArray()
IF true
DO     traceln("invocation out");
com.etz.replay.unit.context.InvocationContext.getCurrent().pop(_args,$!,null);
ENDRULE


RULE trace invocation in1
CLASS ^com.etz.replay.unit.targets.AOuterServiceImpl
METHOD getAName
AT ENTRY
BIND invocation:com.etz.replay.unit.context.Invocation=new com.etz.replay.unit.context.Invocation();
        _args:Object[]=java.util.stream.Stream.of($*).skip(1).toArray()
IF true
DO   traceln("invocation in1");
    invocation.setMethod("getAName");
    com.etz.replay.unit.context.InvocationContext.getCurrent().push(invocation,_args);
ENDRULE


RULE trace invocation out1
CLASS ^com.etz.replay.unit.targets.AOuterServiceImpl
METHOD getAName
AT EXIT
BIND   _args:Object[]=java.util.stream.Stream.of($*).skip(1).toArray()
IF true
DO     traceln("invocation out1");
com.etz.replay.unit.context.InvocationContext.getCurrent().pop(_args,$!,null);
ENDRULE